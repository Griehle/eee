/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'media-categories': MediaCategory;
    pages: Page;
    'home-slider': HomeSlider;
    'home-section': HomeSection;
    testimonials: Testimonial;
    'team-members': TeamMember;
    services: Service;
    'content-blocks': ContentBlock;
    'page-templates': PageTemplate;
    'pdf-documents': PdfDocument;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'media-categories': MediaCategoriesSelect<false> | MediaCategoriesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'home-slider': HomeSliderSelect<false> | HomeSliderSelect<true>;
    'home-section': HomeSectionSelect<false> | HomeSectionSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    'team-members': TeamMembersSelect<false> | TeamMembersSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    'content-blocks': ContentBlocksSelect<false> | ContentBlocksSelect<true>;
    'page-templates': PageTemplatesSelect<false> | PageTemplatesSelect<true>;
    'pdf-documents': PdfDocumentsSelect<false> | PdfDocumentsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'home-page': HomePage;
    'site-branding': SiteBranding;
  };
  globalsSelect: {
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
    'site-branding': SiteBrandingSelect<false> | SiteBrandingSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  role?: ('admin' | 'user') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * üìÅ Upload and organize images, videos, and documents with advanced search and categorization
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Alternative text for accessibility and SEO
   */
  alt: string;
  /**
   * Optional title for the media file
   */
  title?: string | null;
  /**
   * Optional caption or description
   */
  caption?: string | null;
  /**
   * Organize files by category for easier searching
   */
  category?: (number | null) | MediaCategory;
  /**
   * Comma-separated tags for better searchability (e.g., "hero, banner, blue, modern")
   */
  tags?: string | null;
  /**
   * Intended use for this media file
   */
  usage?: ('general' | 'hero' | 'content' | 'team' | 'product' | 'icon' | 'background') | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-categories".
 */
export interface MediaCategory {
  id: number;
  /**
   * Category name (e.g., "Hero Images", "Team Photos", "Icons")
   */
  name: string;
  /**
   * URL-friendly version (auto-generated from name)
   */
  slug: string;
  /**
   * Brief description of what this category contains
   */
  description?: string | null;
  /**
   * Color coding for easy identification
   */
  color?: ('blue' | 'green' | 'yellow' | 'orange' | 'red' | 'purple' | 'gray') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  /**
   * This will be the URL path for this page (e.g., "about" for /about)
   */
  slug: string;
  templateSelector?: {
    /**
     * Load content from a template
     */
    useTemplate?: boolean | null;
    /**
     * Choose a template to load
     */
    template?: (number | null) | PageTemplate;
  };
  /**
   * Build your page using blocks - drag, drop, and customize each element
   */
  pageBuilder?:
    | (
        | {
            block: number | ContentBlock;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contentBlock';
          }
        | {
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
        | {
            /**
             * Custom HTML code
             */
            html: string;
            /**
             * Optional CSS styles
             */
            css?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'customHTML';
          }
      )[]
    | null;
  /**
   * Legacy content field - use Page Builder above for modern layouts
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  status?: ('draft' | 'published') | null;
  publishedDate?: string | null;
  author?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * üìã Create reusable page templates similar to WPBakery template library
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-templates".
 */
export interface PageTemplate {
  id: number;
  /**
   * Name of this template
   */
  name: string;
  /**
   * Brief description of what this template is used for
   */
  description?: string | null;
  /**
   * Template category
   */
  category?:
    | ('homepage' | 'about' | 'contact' | 'services' | 'team' | 'portfolio' | 'pricing' | 'faq' | 'landing' | 'other')
    | null;
  /**
   * Preview image for this template
   */
  thumbnail?: (number | null) | Media;
  /**
   * Build the template structure using blocks
   */
  pageBuilder?:
    | (
        | {
            block: number | ContentBlock;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contentBlock';
          }
        | {
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
        | {
            /**
             * Custom HTML code
             */
            html: string;
            /**
             * Optional CSS styles
             */
            css?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'customHTML';
          }
      )[]
    | null;
  /**
   * Tags to help users find this template (e.g., "responsive", "modern", "business")
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Make this template available for use
   */
  isActive?: boolean | null;
  /**
   * Featured templates appear first in the template picker
   */
  isFeatured?: boolean | null;
  metadata?: {
    /**
     * Template author/creator
     */
    author?: string | null;
    /**
     * Template version
     */
    version?: string | null;
    compatibility?: ('responsive' | 'desktop' | 'mobile') | null;
    /**
     * Any plugins or dependencies required for this template
     */
    requiredPlugins?:
      | {
          plugin: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * üèóÔ∏è Create powerful page builder blocks similar to WPBakery
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "content-blocks".
 */
export interface ContentBlock {
  id: number;
  /**
   * Internal name for this content block
   */
  title: string;
  /**
   * What type of content block this is
   */
  blockType:
    | 'row'
    | 'column'
    | 'section'
    | 'text'
    | 'heading'
    | 'image'
    | 'gallery'
    | 'video'
    | 'quote'
    | 'button'
    | 'icon_box'
    | 'raw_html'
    | 'accordion'
    | 'tabs'
    | 'carousel'
    | 'contact_form'
    | 'google_maps'
    | 'features'
    | 'stats'
    | 'team_grid'
    | 'cta'
    | 'progress_bar'
    | 'separator'
    | 'pdf_flipbook';
  /**
   * Define columns for this row - each column can contain multiple content blocks
   */
  columns?:
    | {
        width?: ('1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12') | null;
        /**
         * Add content blocks, text, or HTML to this column
         */
        columnBlocks?:
          | (
              | {
                  /**
                   * Select a content block to include in this column
                   */
                  block: number | ContentBlock;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'contentBlock';
                }
              | {
                  content: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richText';
                }
              | {
                  /**
                   * Custom HTML code
                   */
                  html: string;
                  /**
                   * Optional CSS styles
                   */
                  css?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'customHTML';
                }
            )[]
          | null;
        /**
         * Legacy rich text content (use Column Content above for more flexibility)
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Main content for this block
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Raw HTML content - be careful with security!
   */
  htmlContent?: string | null;
  /**
   * Optional CSS styles for this HTML block
   */
  cssStyles?: string | null;
  /**
   * Heading configuration
   */
  heading?: {
    text: string;
    tag?: ('h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6') | null;
    /**
     * CSS color value (e.g., #333333)
     */
    color?: string | null;
  };
  /**
   * Image for this block
   */
  image?: (number | null) | Media;
  /**
   * Images for gallery
   */
  gallery?:
    | {
        image: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Video configuration
   */
  video?: {
    /**
     * YouTube, Vimeo, or direct video URL
     */
    url?: string | null;
    autoplay?: boolean | null;
    controls?: boolean | null;
    loop?: boolean | null;
    /**
     * Maximum width of the video container
     */
    size?: ('small' | 'medium' | 'large' | 'xl' | 'full') | null;
    /**
     * Aspect ratio for embed videos
     */
    aspectRatio?: ('16:9' | '4:3' | '21:9' | '1:1' | '9:16') | null;
  };
  /**
   * Quote/testimonial content
   */
  quote?: {
    text: string;
    author?: string | null;
    authorTitle?: string | null;
    authorImage?: (number | null) | Media;
  };
  /**
   * Button configuration
   */
  button?: {
    text: string;
    url: string;
    style?: ('primary' | 'secondary' | 'outline' | 'ghost') | null;
    size?: ('sm' | 'md' | 'lg') | null;
    openInNewTab?: boolean | null;
  };
  /**
   * Icon box content
   */
  iconBox?: {
    /**
     * Icon class or SVG code
     */
    icon?: string | null;
    title: string;
    description?: string | null;
    link?: string | null;
  };
  /**
   * Accordion items
   */
  accordion?:
    | {
        title: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        isOpen?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Tab items
   */
  tabs?:
    | {
        title: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Contact form configuration
   */
  contactForm?: {
    title?: string | null;
    description?: string | null;
    emailTo: string;
    fields?:
      | {
          label: string;
          name: string;
          type?: ('text' | 'email' | 'tel' | 'textarea' | 'select') | null;
          required?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Google Maps configuration
   */
  googleMaps?: {
    address: string;
    zoom?: number | null;
    height?: string | null;
  };
  /**
   * List of features
   */
  features?:
    | {
        icon?: string | null;
        title: string;
        description?: string | null;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Statistics to display
   */
  stats?:
    | {
        /**
         * The statistic number (e.g., "100+", "50%")
         */
        number: string;
        /**
         * What this statistic represents
         */
        label: string;
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Team members grid
   */
  teamGrid?: {
    members?: (number | TeamMember)[] | null;
    columns?: ('2' | '3' | '4') | null;
  };
  /**
   * Call to action content
   */
  cta?: {
    title: string;
    description?: string | null;
    primaryButton?: {
      text?: string | null;
      url?: string | null;
    };
    secondaryButton?: {
      text?: string | null;
      url?: string | null;
    };
  };
  /**
   * Progress bars
   */
  progressBar?:
    | {
        label: string;
        percentage: number;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Separator styling
   */
  separator?: {
    style?: ('line' | 'dashed' | 'dotted' | 'double' | 'shadow') | null;
    width?: ('25' | '50' | '75' | '100') | null;
    color?: string | null;
  };
  /**
   * PDF FlipBook configuration
   */
  pdfFlipbook?: {
    /**
     * Select a PDF document to display as flipbook
     */
    pdfDocument: number | PdfDocument;
    /**
     * Show document title above flipbook
     */
    displayTitle?: boolean | null;
    /**
     * Show document description below flipbook
     */
    displayDescription?: boolean | null;
    /**
     * Use advanced flipbook with search, zoom, and fullscreen features
     */
    useAdvanced?: boolean | null;
    /**
     * Optionally override the PDF document's default settings for this specific instance
     */
    overrideSettings?: {
      /**
       * Override document width (leave empty to use document settings)
       */
      width?: number | null;
      /**
       * Override document height (leave empty to use document settings)
       */
      height?: number | null;
      /**
       * Override download setting (leave unchecked to use document settings)
       */
      enableDownload?: boolean | null;
      /**
       * Override fullscreen setting (leave unchecked to use document settings)
       */
      enableFullscreen?: boolean | null;
      /**
       * Override cover page setting (leave unchecked to use document settings)
       */
      showCover?: boolean | null;
    };
  };
  styling?: {
    /**
     * Top margin (e.g., 20px, 2rem)
     */
    marginTop?: string | null;
    /**
     * Bottom margin (e.g., 20px, 2rem)
     */
    marginBottom?: string | null;
    /**
     * Top padding (e.g., 20px, 2rem)
     */
    paddingTop?: string | null;
    /**
     * Bottom padding (e.g., 20px, 2rem)
     */
    paddingBottom?: string | null;
    /**
     * Left padding (e.g., 20px, 2rem)
     */
    paddingLeft?: string | null;
    /**
     * Right padding (e.g., 20px, 2rem)
     */
    paddingRight?: string | null;
    /**
     * Background color (e.g., #ffffff, rgba(255,255,255,0.8))
     */
    backgroundColor?: string | null;
    /**
     * Background image
     */
    backgroundImage?: (number | null) | Media;
    backgroundPosition?:
      | (
          | 'top left'
          | 'top center'
          | 'top right'
          | 'center left'
          | 'center center'
          | 'center right'
          | 'bottom left'
          | 'bottom center'
          | 'bottom right'
        )
      | null;
    backgroundSize?: ('cover' | 'contain' | 'auto') | null;
    backgroundRepeat?: ('no-repeat' | 'repeat' | 'repeat-x' | 'repeat-y') | null;
    /**
     * CSS gradient (e.g., linear-gradient(45deg, #ff0000, #00ff00))
     */
    backgroundGradient?: string | null;
    /**
     * Border width (e.g., 1px, 2px)
     */
    borderWidth?: string | null;
    borderStyle?: ('none' | 'solid' | 'dashed' | 'dotted' | 'double') | null;
    /**
     * Border color (e.g., #cccccc)
     */
    borderColor?: string | null;
    /**
     * Border radius (e.g., 5px, 10px)
     */
    borderRadius?: string | null;
    textAlign?: ('left' | 'center' | 'right' | 'justify') | null;
    /**
     * Text color (e.g., #333333)
     */
    textColor?: string | null;
    /**
     * Font size (e.g., 16px, 1.2rem)
     */
    fontSize?: string | null;
    fontWeight?: ('normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900') | null;
    /**
     * Box shadow (e.g., 0 4px 6px rgba(0,0,0,0.1))
     */
    boxShadow?: string | null;
    animation?:
      | (
          | 'none'
          | 'fadeIn'
          | 'fadeInUp'
          | 'fadeInDown'
          | 'fadeInLeft'
          | 'fadeInRight'
          | 'slideInUp'
          | 'slideInDown'
          | 'zoomIn'
          | 'bounceIn'
        )
      | null;
    /**
     * Animation delay (e.g., 0.2s, 200ms)
     */
    animationDelay?: string | null;
    /**
     * Animation duration (e.g., 1s, 500ms)
     */
    animationDuration?: string | null;
    /**
     * Hide this block on mobile devices
     */
    hideOnMobile?: boolean | null;
    /**
     * Hide this block on tablet devices
     */
    hideOnTablet?: boolean | null;
    /**
     * Hide this block on desktop devices
     */
    hideOnDesktop?: boolean | null;
    /**
     * Custom CSS styles for advanced customization
     */
    customCSS?: string | null;
    /**
     * Custom CSS class name
     */
    customClassName?: string | null;
  };
  /**
   * Make this block available for use
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * üë• Manage team member profiles and information
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members".
 */
export interface TeamMember {
  id: number;
  /**
   * Full name of the team member
   */
  name: string;
  /**
   * Job title or position
   */
  position: string;
  /**
   * Department or team
   */
  department?:
    | (
        | 'leadership'
        | 'engineering'
        | 'design'
        | 'marketing'
        | 'sales'
        | 'operations'
        | 'hr'
        | 'finance'
        | 'support'
        | 'other'
      )
    | null;
  /**
   * Professional headshot or profile photo
   */
  photo: number | Media;
  /**
   * Biography or description of the team member
   */
  bio?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Work email address (optional)
   */
  email?: string | null;
  /**
   * Work phone number (optional)
   */
  phone?: string | null;
  socialLinks?: {
    /**
     * LinkedIn profile URL
     */
    linkedin?: string | null;
    /**
     * Twitter profile URL
     */
    twitter?: string | null;
    /**
     * GitHub profile URL
     */
    github?: string | null;
  };
  /**
   * Date when they joined the company
   */
  startDate?: string | null;
  /**
   * Feature this team member prominently
   */
  featured?: boolean | null;
  /**
   * Show this team member on the website
   */
  isActive?: boolean | null;
  /**
   * Display order within department
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pdf-documents".
 */
export interface PdfDocument {
  id: number;
  /**
   * The title of the PDF document
   */
  title: string;
  /**
   * Brief description of the PDF document
   */
  description?: string | null;
  /**
   * Upload the PDF file
   */
  pdfFile: number | Media;
  category?: ('brochure' | 'manual' | 'catalog' | 'report' | 'book' | 'magazine' | 'other') | null;
  /**
   * Optional thumbnail image for the document
   */
  thumbnail?: (number | null) | Media;
  settings?: {
    /**
     * Display a custom cover page before the PDF
     */
    showCover?: boolean | null;
    /**
     * Width of the flipbook in pixels
     */
    width?: number | null;
    /**
     * Height of the flipbook in pixels
     */
    height?: number | null;
    /**
     * Allow users to download the PDF
     */
    enableDownload?: boolean | null;
    /**
     * Allow fullscreen viewing
     */
    enableFullscreen?: boolean | null;
  };
  /**
   * Check to make this document publicly visible
   */
  isPublished?: boolean | null;
  publishedAt?: string | null;
  /**
   * Add tags to help categorize and search documents
   */
  tags?: string[] | null;
  /**
   * Author or creator of the document
   */
  author?: string | null;
  /**
   * URL-friendly version of the title
   */
  slug?: string | null;
  /**
   * Number of times this document has been viewed
   */
  viewCount?: number | null;
  /**
   * Number of times this document has been downloaded
   */
  downloadCount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * üì∏ Manage up to 10 slider images for the home page hero section. Recommended image size: 1920x800px or larger.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-slider".
 */
export interface HomeSlider {
  id: number;
  /**
   * The main title displayed on the slide
   */
  title: string;
  /**
   * Optional subtitle text displayed below the title
   */
  subtitle?: string | null;
  /**
   * Background image for this slide
   */
  image: number | Media;
  /**
   * Text for the call-to-action button (optional)
   */
  buttonText?: string | null;
  /**
   * URL for the button link (can be internal like /about or external)
   */
  buttonLink?: string | null;
  /**
   * Uncheck to hide this slide
   */
  isActive?: boolean | null;
  /**
   * Display order (0-99, lower numbers appear first). Tip: Use 10, 20, 30... to easily reorder later.
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * üìù Create content sections with rich text and images positioned left or right
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-section".
 */
export interface HomeSection {
  id: number;
  /**
   * Section title/heading
   */
  title: string;
  /**
   * Main content for this section - use the rich text editor to format your content with headings, lists, links, and more
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Image to display alongside the content
   */
  image: number | Media;
  /**
   * Choose how to arrange the image and text content
   */
  imagePosition?: ('left' | 'right') | null;
  /**
   * Text for the call-to-action button (optional)
   */
  buttonText?: string | null;
  /**
   * URL for the button link (can be internal like /about or external)
   */
  buttonLink?: string | null;
  /**
   * Background color for this section
   */
  backgroundColor?: ('transparent' | 'var(--card-background)' | 'var(--background-color)') | null;
  /**
   * Uncheck to hide this section
   */
  isActive?: boolean | null;
  /**
   * Order of appearance (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * ‚≠ê Manage customer testimonials and reviews
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  /**
   * The customer testimonial or review text
   */
  testimonial: string;
  /**
   * Full name of the customer
   */
  customerName: string;
  /**
   * Customer's company or organization (optional)
   */
  company?: string | null;
  /**
   * Job title or position (optional)
   */
  position?: string | null;
  /**
   * Optional photo of the customer
   */
  customerPhoto?: (number | null) | Media;
  /**
   * Star rating (1-5)
   */
  rating?: number | null;
  /**
   * Feature this testimonial prominently
   */
  featured?: boolean | null;
  /**
   * Show this testimonial on the website
   */
  isActive?: boolean | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  /**
   * When the testimonial was received
   */
  dateGiven?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * üõ†Ô∏è Manage services and business offerings
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  /**
   * Service name or title
   */
  title: string;
  /**
   * URL-friendly version for service pages
   */
  slug: string;
  /**
   * Brief description for service cards and listings
   */
  shortDescription: string;
  /**
   * Full detailed description of the service
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Main image representing the service
   */
  featuredImage: number | Media;
  /**
   * Optional icon for the service (SVG or small image)
   */
  icon?: (number | null) | Media;
  /**
   * Service category for grouping
   */
  category?: ('web-development' | 'mobile-apps' | 'design' | 'consulting' | 'support' | 'training' | 'other') | null;
  /**
   * List of key features or benefits
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  pricing?: {
    /**
     * Starting price (optional)
     */
    startingPrice?: number | null;
    /**
     * How the service is priced
     */
    priceType?: ('per-hour' | 'per-project' | 'monthly' | 'custom') | null;
    /**
     * Additional pricing information (e.g., "Starting from" or "Contact for quote")
     */
    priceNote?: string | null;
  };
  callToAction?: {
    /**
     * Text for the CTA button
     */
    buttonText?: string | null;
    /**
     * Where the CTA button should link to
     */
    buttonLink?: string | null;
  };
  /**
   * Feature this service prominently
   */
  featured?: boolean | null;
  /**
   * Show this service on the website
   */
  isActive?: boolean | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'media-categories';
        value: number | MediaCategory;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'home-slider';
        value: number | HomeSlider;
      } | null)
    | ({
        relationTo: 'home-section';
        value: number | HomeSection;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'team-members';
        value: number | TeamMember;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'content-blocks';
        value: number | ContentBlock;
      } | null)
    | ({
        relationTo: 'page-templates';
        value: number | PageTemplate;
      } | null)
    | ({
        relationTo: 'pdf-documents';
        value: number | PdfDocument;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  title?: T;
  caption?: T;
  category?: T;
  tags?: T;
  usage?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-categories_select".
 */
export interface MediaCategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  templateSelector?:
    | T
    | {
        useTemplate?: T;
        template?: T;
      };
  pageBuilder?:
    | T
    | {
        contentBlock?:
          | T
          | {
              block?: T;
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
        customHTML?:
          | T
          | {
              html?: T;
              css?: T;
              id?: T;
              blockName?: T;
            };
      };
  content?: T;
  status?: T;
  publishedDate?: T;
  author?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-slider_select".
 */
export interface HomeSliderSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  image?: T;
  buttonText?: T;
  buttonLink?: T;
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-section_select".
 */
export interface HomeSectionSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  image?: T;
  imagePosition?: T;
  buttonText?: T;
  buttonLink?: T;
  backgroundColor?: T;
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  testimonial?: T;
  customerName?: T;
  company?: T;
  position?: T;
  customerPhoto?: T;
  rating?: T;
  featured?: T;
  isActive?: T;
  order?: T;
  dateGiven?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members_select".
 */
export interface TeamMembersSelect<T extends boolean = true> {
  name?: T;
  position?: T;
  department?: T;
  photo?: T;
  bio?: T;
  email?: T;
  phone?: T;
  socialLinks?:
    | T
    | {
        linkedin?: T;
        twitter?: T;
        github?: T;
      };
  startDate?: T;
  featured?: T;
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  shortDescription?: T;
  description?: T;
  featuredImage?: T;
  icon?: T;
  category?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  pricing?:
    | T
    | {
        startingPrice?: T;
        priceType?: T;
        priceNote?: T;
      };
  callToAction?:
    | T
    | {
        buttonText?: T;
        buttonLink?: T;
      };
  featured?: T;
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "content-blocks_select".
 */
export interface ContentBlocksSelect<T extends boolean = true> {
  title?: T;
  blockType?: T;
  columns?:
    | T
    | {
        width?: T;
        columnBlocks?:
          | T
          | {
              contentBlock?:
                | T
                | {
                    block?: T;
                    id?: T;
                    blockName?: T;
                  };
              richText?:
                | T
                | {
                    content?: T;
                    id?: T;
                    blockName?: T;
                  };
              customHTML?:
                | T
                | {
                    html?: T;
                    css?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        content?: T;
        id?: T;
      };
  content?: T;
  htmlContent?: T;
  cssStyles?: T;
  heading?:
    | T
    | {
        text?: T;
        tag?: T;
        color?: T;
      };
  image?: T;
  gallery?:
    | T
    | {
        image?: T;
        caption?: T;
        id?: T;
      };
  video?:
    | T
    | {
        url?: T;
        autoplay?: T;
        controls?: T;
        loop?: T;
        size?: T;
        aspectRatio?: T;
      };
  quote?:
    | T
    | {
        text?: T;
        author?: T;
        authorTitle?: T;
        authorImage?: T;
      };
  button?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
        size?: T;
        openInNewTab?: T;
      };
  iconBox?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        link?: T;
      };
  accordion?:
    | T
    | {
        title?: T;
        content?: T;
        isOpen?: T;
        id?: T;
      };
  tabs?:
    | T
    | {
        title?: T;
        content?: T;
        icon?: T;
        id?: T;
      };
  contactForm?:
    | T
    | {
        title?: T;
        description?: T;
        emailTo?: T;
        fields?:
          | T
          | {
              label?: T;
              name?: T;
              type?: T;
              required?: T;
              id?: T;
            };
      };
  googleMaps?:
    | T
    | {
        address?: T;
        zoom?: T;
        height?: T;
      };
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        link?: T;
        id?: T;
      };
  stats?:
    | T
    | {
        number?: T;
        label?: T;
        icon?: T;
        id?: T;
      };
  teamGrid?:
    | T
    | {
        members?: T;
        columns?: T;
      };
  cta?:
    | T
    | {
        title?: T;
        description?: T;
        primaryButton?:
          | T
          | {
              text?: T;
              url?: T;
            };
        secondaryButton?:
          | T
          | {
              text?: T;
              url?: T;
            };
      };
  progressBar?:
    | T
    | {
        label?: T;
        percentage?: T;
        color?: T;
        id?: T;
      };
  separator?:
    | T
    | {
        style?: T;
        width?: T;
        color?: T;
      };
  pdfFlipbook?:
    | T
    | {
        pdfDocument?: T;
        displayTitle?: T;
        displayDescription?: T;
        useAdvanced?: T;
        overrideSettings?:
          | T
          | {
              width?: T;
              height?: T;
              enableDownload?: T;
              enableFullscreen?: T;
              showCover?: T;
            };
      };
  styling?:
    | T
    | {
        marginTop?: T;
        marginBottom?: T;
        paddingTop?: T;
        paddingBottom?: T;
        paddingLeft?: T;
        paddingRight?: T;
        backgroundColor?: T;
        backgroundImage?: T;
        backgroundPosition?: T;
        backgroundSize?: T;
        backgroundRepeat?: T;
        backgroundGradient?: T;
        borderWidth?: T;
        borderStyle?: T;
        borderColor?: T;
        borderRadius?: T;
        textAlign?: T;
        textColor?: T;
        fontSize?: T;
        fontWeight?: T;
        boxShadow?: T;
        animation?: T;
        animationDelay?: T;
        animationDuration?: T;
        hideOnMobile?: T;
        hideOnTablet?: T;
        hideOnDesktop?: T;
        customCSS?: T;
        customClassName?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-templates_select".
 */
export interface PageTemplatesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  category?: T;
  thumbnail?: T;
  pageBuilder?:
    | T
    | {
        contentBlock?:
          | T
          | {
              block?: T;
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
        customHTML?:
          | T
          | {
              html?: T;
              css?: T;
              id?: T;
              blockName?: T;
            };
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  isActive?: T;
  isFeatured?: T;
  metadata?:
    | T
    | {
        author?: T;
        version?: T;
        compatibility?: T;
        requiredPlugins?:
          | T
          | {
              plugin?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pdf-documents_select".
 */
export interface PdfDocumentsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  pdfFile?: T;
  category?: T;
  thumbnail?: T;
  settings?:
    | T
    | {
        showCover?: T;
        width?: T;
        height?: T;
        enableDownload?: T;
        enableFullscreen?: T;
      };
  isPublished?: T;
  publishedAt?: T;
  tags?: T;
  author?: T;
  slug?: T;
  viewCount?: T;
  downloadCount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: number;
  /**
   * Overlay opacity for hero slider (0 - 1)
   */
  heroOverlayOpacity?: number | null;
  /**
   * Slider auto-play interval in milliseconds
   */
  autoPlayInterval?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Manage your site branding, logo, and header configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-branding".
 */
export interface SiteBranding {
  id: number;
  /**
   * Upload your site logo (recommended: PNG with transparent background)
   */
  logo?: (number | null) | Media;
  /**
   * Alt text for your logo (for accessibility)
   */
  logoAlt?: string | null;
  /**
   * Your site name (displayed if no logo or as fallback)
   */
  siteName: string;
  /**
   * Optional tagline or slogan
   */
  tagline?: string | null;
  /**
   * Choose your header layout style
   */
  headerStyle?: ('standard' | 'centered' | 'split' | 'stacked') | null;
  /**
   * Show tagline below logo in header
   */
  showTaglineInHeader?: boolean | null;
  /**
   * Manage your main navigation links
   */
  navigationLinks?:
    | {
        label: string;
        /**
         * Use relative URLs like "/about" or full URLs
         */
        url: string;
        openInNewTab?: boolean | null;
        /**
         * Uncheck to temporarily hide this link
         */
        isActive?: boolean | null;
        id?: string | null;
      }[]
    | null;
  headerStyling?: {
    /**
     * Header background color (e.g., #ffffff, rgba(255,255,255,0.9))
     */
    backgroundColor?: string | null;
    /**
     * Header text color (e.g., #333333)
     */
    textColor?: string | null;
    /**
     * Maximum height for logo (e.g., 50px, 3rem)
     */
    logoMaxHeight?: string | null;
    /**
     * Make header stick to top when scrolling
     */
    isSticky?: boolean | null;
    /**
     * Show shadow below header
     */
    showShadow?: boolean | null;
    /**
     * Custom CSS for advanced header styling
     */
    customCSS?: string | null;
  };
  socialMedia?: {
    /**
     * Show social media icons in header
     */
    showInHeader?: boolean | null;
    /**
     * Facebook page URL
     */
    facebook?: string | null;
    /**
     * Twitter/X profile URL
     */
    twitter?: string | null;
    /**
     * Instagram profile URL
     */
    instagram?: string | null;
    /**
     * LinkedIn profile URL
     */
    linkedin?: string | null;
    /**
     * YouTube channel URL
     */
    youtube?: string | null;
  };
  headerContact?: {
    /**
     * Show contact info in header
     */
    showContactInfo?: boolean | null;
    /**
     * Phone number
     */
    phone?: string | null;
    /**
     * Email address
     */
    email?: string | null;
    /**
     * Short address (e.g., "New York, NY")
     */
    address?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  heroOverlayOpacity?: T;
  autoPlayInterval?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-branding_select".
 */
export interface SiteBrandingSelect<T extends boolean = true> {
  logo?: T;
  logoAlt?: T;
  siteName?: T;
  tagline?: T;
  headerStyle?: T;
  showTaglineInHeader?: T;
  navigationLinks?:
    | T
    | {
        label?: T;
        url?: T;
        openInNewTab?: T;
        isActive?: T;
        id?: T;
      };
  headerStyling?:
    | T
    | {
        backgroundColor?: T;
        textColor?: T;
        logoMaxHeight?: T;
        isSticky?: T;
        showShadow?: T;
        customCSS?: T;
      };
  socialMedia?:
    | T
    | {
        showInHeader?: T;
        facebook?: T;
        twitter?: T;
        instagram?: T;
        linkedin?: T;
        youtube?: T;
      };
  headerContact?:
    | T
    | {
        showContactInfo?: T;
        phone?: T;
        email?: T;
        address?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}